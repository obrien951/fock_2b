
    -----------------------------------------------------------------------
          Psi4: An Open-Source Ab Initio Electronic Structure Package
                               Psi4 1.4a2.dev481 

                         Git: Rev {mem_df_2b} 989abc7 dirty


    R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,
    A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,
    R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,
    H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,
    P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,
    F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,
    J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).
    (doi: 10.1021/acs.jctc.7b00174)


                         Additional Contributions by
    P. Kraus, H. Kruse, M. H. Lechner, M. C. Schieber, R. A. Shaw,
    A. Alenaizan, R. Galvelis, Z. L. Glick, S. Lehtola, and J. P. Misiewicz

    -----------------------------------------------------------------------


    Psi4 started on: Monday, 22 June 2020 05:10PM

    Process ID: 27866
    Host:       ds6
    PSIDATADIR: /theoryfs2/ds/obrien/psi4s/mem_df_2b/psi4/objdir/stage/share/psi4
    Memory:     500.0 MiB
    Threads:    1
    
  ==> Input File <==

--------------------------------------------------------------------------
#!/apps/anaconda/bin/python
import numpy as np
import os
import sys
from helper_test import *
import psi4
#from fock import *

sys.path.append('/theoryfs2/ds/obrien/monika_f12/jk_test')
sys.path.append('/theoryfs2/ds/obrien/monika_f12/jk_test/basis')
# Memory for Psi4 in GB
psi4.set_memory('20 GB')
psi4.core.set_output_file('output.dat', True)

# Memory for numpy in GB
numpy_memory = 20

dimer = psi4.geometry("""
0 1
O 0.0000000000 -0.0578657100 -1.4797930300
H 0.0000000000 0.8229338400 -1.8554147400
H 0.0000000000 0.0794956700 -0.5193425300
--
0 1
N 0.0000000000 0.0143639400 1.4645462800
H 0.0000000000 -0.9810485700 1.6534477900
H -0.8134835100 0.3987677600 1.9293404900
H 0.8134835100 0.3987677600 1.9293404900

units angstrom
""")

psi4.set_options({'basis':'aug-cc-pvdz',
                  'df_basis_mp2':'aug-cc-pvdz-ri',
                  'scf_type': 'mem_df',
                  'e_convergence': 1e-8,
                  'd_convergence': 1e-8,
                })

tstart_begining = time.time()
# Specify RI and JKFIT(optionally) basis
ri_basis = 'aug-cc-pvdz-ri'
jk_basis = 'aug-cc-pvdz-jkfit'


# Use the JKFIT basis?
use_jk_basis = False

if use_jk_basis:
        sapt = helper_SAPT(dimer,memory=20,ri_basis=ri_basis,jk_basis=jk_basis)
else:
        sapt = helper_SAPT(dimer,memory=20,ri_basis=ri_basis)


sapt.print_basis_sets()

obs = sapt.get_size()
nocc_A = obs['a']
nocc_B = obs['b']
nvir_A = obs['r']
nvir_B = obs['s']
nobs = obs['p']
nri =  obs['ri'] 

# Orbital spaces
print('\nOrbital Spaces:')
print('-----------------')
print('  nobs  : %d' % nobs)
print('  nocc_A: %d' % nocc_A)
print('  nocc_B: %d' % nocc_B)
print('  nvir_A: %d' % nvir_A)
print('  nvir_B: %d' % nvir_B)
print('  nri   : %d' % nri)


joeC_A = sapt.Co_A
joeC_B = sapt.Co_B

print("joeC_A has "+str(joeC_A.shape[0])+" rows")

Cxi_A, Cxj_B = sapt.get_Cxi_A_Cxj_B(dimer)


# "print" calls from JSOB

# J and K for mon A
Jxx_A, Kxx_A = sapt.build_jk(Cxi_A,Cxi_A)

#Jxx_A_2B, Kxx_A_2B = sapt.build_2b_jk(Cxi_A,Cxi_A)
# why is the above commented out? it's a horrible idea. why?
# the matrices Cxi_A and Cxi_a are both Monika's "hack" matrices. You need to
# feed matrices from the AO basis

Jxx_A_2B, Kxx_A_2B = sapt.build_2b_jk(joeC_A, joeC_A)

print("Jxx_A")
print(Jxx_A)
print("Kxx_A")
print(Kxx_A)

print("Jxx_A_2B")
print(Jxx_A_2B)
print("Kxx_A_2B")
print(Kxx_A_2B)

mat_a = Jxx_A - Jxx_A_2B 
mat_b = Kxx_A - Kxx_A_2B
print("mat_a")
print(mat_a)
print(np.linalg.norm(mat_a, 2))

print("mat_b")
print(mat_b)
print(np.linalg.norm(mat_b, 2))

Jxx_A, Kxx_A = sapt.sort_bf_in_Jxx_Kxx(Jxx_A,Kxx_A)
#Jxx_A_2B, Kxx_A_2B = sapt.sort_bf_in_Jxx_Kxx(Jxx_A_2B, Kxx_A_2B)


#print(Jxx_A)
#print(Kxx_A)

# J and K for mon B
#Jxx_B, Kxx_B = sapt.build_jk(Cxj_B,Cxj_B)
#Jxx_A_2B, Kxx_A_2B = sapt.build_2b_jk(Cxi_A,Cxi_A)
#
#
#print(Jxx_B)
#print(Kxx_B)
#
#Jxx_B, Kxx_B = sapt.sort_bf_in_Jxx_Kxx(Jxx_B,Kxx_B)
#
#print(Jxx_B)
#print(Kxx_B)

#fk_A,fk_B,f_A,f_B,k_A,k_B = build_fk_A_fk_B(sapt,dimer,nobs,nri)

--------------------------------------------------------------------------

  Memory set to  18.626 GiB by Python driver.
